
Docker é um software que reduz a complexidade de setup configurando containers que são como servidores para rodar nossas aplicações


# Comandos Docker

## container

**Um container Docker é um pacote de software com todas as dependências necessárias para executar um aplicativo específico**

*    *comandos no terminal*

- docker run "nome da imagem" = rodar a imagem
- docker run -it "nome da imagem" = rodar e deixar rodando
- docker ps = mostra o container q ta rodando
- docker ps -a = mostra todos os containers
- docler run -d container = rodar o container em segundo plano
- docker stop "nome" = parar o container
- docker run -d -p 3000:80 "nome da imagem" = exportar porta (primeira porta é a do meu pc e segunda é do container)
- docker start "id" = inicia um container que ja foi usado
- -- name "nome" = define um nome ex(docker run -d -p 80:80 --name nginx_app nginx) **coloque nomes objetivos**
- docker logs "nome" = ver os problemas que aconteceram
- docker rm "nome" = remove o container (**flag -f apaga um container ativo**)
- docker image ls = listar imagens
- docker rmi -f "id" = deletar imagem
- docker tag "id" "nome" = nomear uma imagem 
- docker tag "id" "nome:tag" = nomear uma tag
- docker build -t novabuild:versao1.0 . = cria uma nova imagem na pasta q vc ta
- docker start -i "imagem" = roda a imagem com terminal interativo 
- docker pull = faz o download da imagem pro pc
- docker system prune = apaga dados que nao estao sendo utilizados
- docker run --rm = remove um container apos a utilização dele
- docker cp "fonte" "destino" = copia o arquivo pra um destino selecionado
- docker inspect "container" = ve as configurações do container
- docker stats = ve o quanto o container ta gastando do pc
- docker run -v "nome":/data = criar um volume e salvar em data
- docker volume ls = listar todos os volumes
- docker volume inspect "nome do volume" = inspecionar o volume
- docker volume prune = remove volumes q não estao sendo usados
- docker run -v volume:/data:ro = criar volume somente de leitura
- 
****************************************************************************

## Redes

- docker network ls = mostrar as redes
- docker network create "nome" = cria rede
- docker network rm "id" = deleta
- docker network crate -d "nome do driver" = cria em um driver especifico
- docker network prune = remove varias redes nao usadas
- docker network connect "rede" = conecta a uma rede
- docker network disconnect "rede" = desconecta
- docker network inspect "rede" = inspeciona a rede
- 

*****************************************************************************************

*Como rodar uma imagem e salvar o conteudo num volume no diretorido do pc*

- docker run -d -p 80:80 --name phpmessages_container -v "diretorio da pasta que eu quero salvar":"workdir do dockerfile" --rm phpmessages

(exemplo: **docker run -d -p 80:80 --name phpmessages_container -v C:\Users\fabri\Desktop\docker\curso_docker\2_volumes\messages:/var/www/html/messages --rm phpmessages**)

- se tirar da pasta messages e deixar no diretorio, você consegue atualizar o projeto em tempo real

(exemplo: **docker run -d -p 80:80 --name phpmessages_container -v C:\Users\fabri\Desktop\docker\curso_docker\2_volumes\:/var/www/html/ --rm phpmessages**)

******************************************************************************************

obs 

- 2 click esquerdo + 1 click direito = copia e cola
- comando **run** sempre cria um novo container


****************************************************************************************************

## Imagens

**Imagens são originadas de arquivos que programamos para que o docker crie uma estrutura que execute determinada ação em containers**

*Ela contem informações como imagens, diretório, comandos e porta de aplicação*
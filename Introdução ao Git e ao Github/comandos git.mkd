### Git (sistema de versionamento de codigo distribuido)



# Alguns comandos:

## Basico Git

- git init = iniciar repositorio

- git add "nome do arquivo" = coloca o arquivo em staged      *tem que estar em staged pra commitar*

- git add * = coloca todos os arquivos em staged

- git commit -m "mensagem do arquivo" = commita o arquivo

- git status = ver o status do arquivo

- git push origin master = commitar o diretorio no github

- git pull origin master = puxa o arquivo e compara com o seu

- git remote -v = ver os diretorios naquela pastas

- git remote add = adiciona um repositorio remoto ao local

- git config --list = ver a lista de configs git

- git remote rename "nome atual" "novo nome" = alterar o nome do repositorio

- git remote rm = deleta o repositorio

- git rm = "excluir arquivo"

- git checkout = "cancela as alterações"

- git ignore = "ignora itens dentro da pasta"

-------------------------------------------------------------------------------------------------
 ## Submodule

- git submodule add = criar um novo submodulo

- git submodule = ver os submodulos

- git push --recurse-submodules=on-demand = envia atualizações pro submodulo
-------------------------------------------------------------------------------------------------
## Branch

- git branch = mostra as branchs existentes

- git branch <nome> = cria uma branch nova

- git branch -d <nome> = deleta o branch

- git checkout <nome da branch> = muda pra essa branch ou tag

- git checkout -b <nome> = muda e cria uma branch

- git reset --hard = "reseta uma branch"

- git merge <nome da branch> = puxar as atualizações daquela branch 

- git fetch -a = puxa todos os branchs de outros devs

- git show = mostra as modificações feitas na branch/tags

-------------------------------------------------------------------------------------------------
## Stash

- git stash = tira tudo que vc fez e volta pro ponto de clonagem

- git stash list = mostra tudo que vc apagou

- git stash apply <numero dela> = volta pro codigo 

- git stash show -p <numero dea> = mostra exatamente oq modificou

- git stash clear = limpa tudas stashs

- git stash drop <numero> = deleta stash especifico

- git tag -a <nome da tag> -m <mensagem sobre ela> = basicamente uma branch de uma branch

- git push origin --tags

-------------------------------------------------------------------------------------------------
## log

- git shortlog = um log resumido do repositorio

- git reflog = um log completo sobre tudo feito no repositorio

- git reset --hard <código hash> = reseta até o momento da hash 

-------------------------------------------------------------------------------------------------
## Optimização

- git clean = limpa arquivos desnecessarios que não foram add

- git gc = limpa arquivos desnecessarios automaticamente

- git fsck = garante a integridade dos arquivos

- git archive --gormat zip --output <nome do arquivo>.zip master = compacta o repo caso seja necessario levar para algum lugar

-------------------------------------------------------------------------------------------------

## OBS

- da pra dar push em tags tbm
- touch - cria arquivo novo no diretorio
- mkdir = criar diretorio
- ls = list
- cd .. = voltar 1 diretório
- mv = mover
- ./ = dentro do repositorio que estamos
- arquivo .md = markdown
- flag "-m" = adicionar uma mensagem
- flag "-a" = commitar varios arquivos de uma vez

sdfasas
adada
asdada
fdffg

  
